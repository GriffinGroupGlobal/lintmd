clone:
  git:
    image: plugins/git
    tags: true
pipeline:
  markdownlint:
    image: g3dev/lintmd
    pull: true
  setup-builddata-tag:
    image: g3dev/nodedev:${BASE_VERSION}
    commands:
    - cat templates/build_data.yml.template | sed "s/__BRANCH__/HEAD/g" | sed "s/__SHA__/${DRONE_COMMIT_SHA}/g" | sed "s/__BUILDNUM__/${DRONE_BUILD_NUMBER}/g" | sed "s/__DEPLOY_TYPE__//g" |  sed "s/__TAG__/`./cuttags.sh`/g" | sed "s/__BASEVER__/${BASE_VERSION}/g" > build_data.yml
    when:
      event: [ tag ]
      ref:
        exclude:
        - refs/heads/v*
  setup-builddata-release-branch:
    image: g3dev/nodedev:${BASE_VERSION}
    commands:
    - cat templates/build_data.yml.template | sed "s/__BRANCH__/${DRONE_COMMIT_BRANCH}/g" | sed "s/__SHA__/${DRONE_COMMIT_SHA}/g" | sed "s/__BUILDNUM__/${DRONE_BUILD_NUMBER}/g" | sed "s/__DEPLOY_TYPE__//g" |  sed "s/__TAG__/`git symbolic-ref --short HEAD | cut -d\v -f2`/g" | sed "s/__BASEVER__/${BASE_VERSION}/g" > build_data.yml
    when:
      branch:
      - v*
  setup-builddata-alpha:
    image: g3dev/nodedev:${BASE_VERSION}
    commands:
    - cat templates/build_data.yml.template | sed "s/__BRANCH__/${DRONE_COMMIT_BRANCH}/g" | sed "s/__SHA__/${DRONE_COMMIT_SHA}/g" | sed "s/__BUILDNUM__/${DRONE_BUILD_NUMBER}/g" | sed "s/__DEPLOY_TYPE__/ALPHA-/g" |  sed "s/__TAG__/`git describe --abbrev=0 --tags | cut -d\- -f1`/g" | sed "s/__BASEVER__/${BASE_VERSION}/g" > build_data.yml
    when:
      event: [ pull_request, push, deployment ]
      ref:
        exclude:
        - refs/heads/v*
  build-dockerfile:
    image: g3dev/jinja2cli
    pull: true
    template: templates/Dockerfile.j2
    data: build_data.yml
    outfile: Dockerfile
  build-tags:
    image: g3dev/jinja2cli
    template: templates/tags.j2
    data: build_data.yml
    outfile: .tags
    when:
      event: [ pull_request, push, tag ]
  publish:
    image: plugins/docker
    repo: g3dev/lintmd
    secrets: [ docker_username, docker_password ]
    when:
      event: [ push, tag ]
  notify-email:
    image: drillster/drone-email
    from: no-reply@griffingroupglobal.com
    secrets: [ email_username, email_password, email_recipients, email_host ]
    subject: >
      drone.g3dev.io - [{{ build.status }}]
      {{ repo.owner }}/{{ repo.name }}
      ({{ commit.branch }} - {{ commit.link }})
    when:
      branch: master
      status: [ success, failure ]
      event: [ push, tag, deployment ]
  notify-slack:
    image: plugins/slack-blame
    secrets: [ slack_token ]
    channel: gravity_build
    mapping:
      MattAtG3: matt.jenks@griffingroupglobal.com
    success_template: |
      The build ${DRONE_REPO_NAME} was fixed by commit author @${DRONE_COMMIT_AUTHOR}! Thanks @{{slack.name}}
    success_image_attachments:
      - "http://i.imgur.com/TP4PIxc.jpg"
    failure_template: |
      The build ${DRONE_REPO_NAME} was broken by commit author @${DRONE_COMMIT_AUTHOR}! Blame @{{slack.name}}
    failure_image_attachments:
      - "https://raw.githubusercontent.com/drone-plugins/drone-slack-blame/master/memes/kittens_fail.jpg"
    when:
      branch: master
      status: [ success, failure ]
      event: [ push, tag, deployment ]

matrix:
  BASE_VERSION:
    - 0.3.0-latest
